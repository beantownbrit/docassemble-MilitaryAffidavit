---
include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.ALMassachusetts:al_massachusetts.yml
  - docassemble.MassAccess:massaccess.yml
---
metadata:
  title: |
    Massachusetts Military Affidavit
  short title: |
    Military Affidavit
---
mandatory: True
comment: |
  This contains metadata that will not be overwritten if this YAML file is included in another
  file. Each file gets its own key in the interview_metadata dictionary.
  Most keys are not currently used at runtime, other than "allowed courts".
code: |
  interview_metadata
  if not defined("interview_metadata['military_affidavit']"):
    interview_metadata.initializeObject("military_affidavit")
    interview_metadata["military_affidavit"].update({
      "al_weaver_version": "1.6.1",
      "generated on": "2022-03-01",
      "title": "Massachusetts Military Affidavit",
      "short title": "Military Affidavit",
      "description": "Military affidavit short desc",
      "original_form": "",
      "allowed courts": [
      ],
      "categories": [
      ],        
      "logic block variable": "interview_order_military_affidavit",
      "attachment block variable": "military_affidavit_attachment",
      "typical role": "unknown",
    })
---
code: |
  interview_metadata['main_interview_key'] =  'military_affidavit'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-MilitaryAffidavit'
---
code: |
  interview_short_title = "Get a Military affidavit"
---
code: |
  al_form_type = 'other_form'
---
objects:
  - other_parties: ALPeopleList
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_military_affidavit: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_military_affidavit
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["military_affidavit"]["allowed courts"]
  nav.set_section('review_military_affidavit')
  # Below sets the user_role by asking a question.
  # You can set user_role directly instead to either 'plaintiff' or 'defendant'
  user_ask_role
  is_current_military
  facts
  bbo_number
  set_progress(20)
  trial_court.department
  trial_court.division
  plaintiffs.gather()
  set_progress(40)
  defendants.gather()
  docket_number
  users.gather()
  set_parts(subtitle=str(users))
  set_progress(60)
  signature_date
  interview_order_military_affidavit = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  military_affidavit_intro
  interview_order_military_affidavit
  signature_date
  # Save anonymized interview statistics (customize the saved data below)
  store_variables_snapshot(data={'zip': users[0].address.zip})
  military_affidavit_preview_question
  basic_questions_signature_flow
  users[0].signature
  military_affidavit_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Massachusetts_Military_Affidavit
continue button field: military_affidavit_intro
question: |
  Massachusetts Military Affidavit
subquestion: |
  Military affidavit getting started
---
id: Information about military service
question: |
  Information about military service
fields:
  - "Is current military": is_current_military
    datatype: yesno
  - "Current military parties": current_military_parties
    input type: area
    maxlength: 364
  - "Is not current military": is_not_current_military
    datatype: yesno
  - "List of parties not currently in the military": not_current_military_parties
    input type: area
  - "Unknown current military": unknown_current_military
    datatype: yesno
  - "Unknown current military parties": unknown_current_military_parties
    input type: area
    maxlength: 364
---
id: What facts support your affidavit
question: |
  What facts support your affidavit?
fields:
  - "Facts": facts
    input type: area
    maxlength: 658
---
id: Attorney
question: |
  Attorney
subquestion: |
  Optional
fields:
  - "Bbo number": bbo_number
    maxlength: 27
  - "User is attorney": user_is_attorney
    datatype: yesno
---
id: preview military_affidavit
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_recipient_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Make changes" button
  to edit your answers.

  ${ action_button_html(url_action('review_military_affidavit'), label='Make changes', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: military_affidavit_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
id: military affidavit review screen
event: review_military_affidavit
question: |
  Review your answers
review:
  - Edit: is_current_military
    button: |
      **Is current military**:
      ${ word(yesno(is_current_military)) }
  - Edit: current_military_parties
    button: |
      **Current military parties**:
      > ${ single_paragraph(current_military_parties) }
  - Edit: is_not_current_military
    button: |
      **Is not current military**:
      ${ word(yesno(is_not_current_military)) }
  - Edit: not_current_military_parties
    button: |
      **List of parties not currently in the military**:
      > ${ single_paragraph(not_current_military_parties) }
  - Edit: unknown_current_military
    button: |
      **Unknown current military**:
      ${ word(yesno(unknown_current_military)) }
  - Edit: unknown_current_military_parties
    button: |
      **Unknown current military parties**:
      > ${ single_paragraph(unknown_current_military_parties) }
  - Edit: facts
    button: |
      **Facts**:
      > ${ single_paragraph(facts) }
  - Edit: bbo_number
    button: |
      **Bbo number**:
      ${ bbo_number }
  - Edit: user_is_attorney
    button: |
      **User is attorney**:
      ${ word(yesno(user_is_attorney)) }
  - Edit: trial_court
    button: |
      **trial_court**

      % if defined("trial_court.department"):
      * department: ${ trial_court.department }
      % endif
      % if defined("trial_court.division"):
      * division: ${ trial_court.division }
      % endif
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: docket_number
    button: |
      **docket_number**:
      ${ docket_number }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: signature_date
    button: |
      **signature_date**:
      ${ signature_date }
---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - name.first
  - signature
confirm: True

---
id: download military_affidavit
event: military_affidavit_download
question: |
  Your form is ready to download.
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Make changes" button to fix any mistakes.

  ${ action_button_html(url_action('review_military_affidavit'), label='Make changes', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100
---
objects:
  - military_affidavit_post_interview_instructions: ALDocument.using(title="Instructions", filename="military_affidavit_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - military_affidavit_attachment: ALDocument.using(title="Massachusetts Military Affidavit", filename="military_affidavit.pdf", enabled=True, has_addendum=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[military_affidavit_post_interview_instructions,military_affidavit_attachment], filename="military_affidavit.pdf_package.pdf", title="All forms to download for your records", enabled=True)
  - al_recipient_bundle: ALDocumentBundle.using(elements=[military_affidavit_attachment], filename="military_affidavit.pdf_package.pdf", title="All forms to download for your records", enabled=True)
---
attachments:
  - name: military affidavit post interview instructions
    filename: Post-interview-instructions     
    variable name: military_affidavit_post_interview_instructions[i]        
    skip undefined: True
    docx template file: military_affidavit_next_steps.docx
  - name: military affidavit attachment
    filename: military_affidavit.pdf     
    variable name: military_affidavit_attachment[i]        
    skip undefined: True
    pdf template file: military_affidavit.pdf
    fields:
      - "trial_court_department": ${ trial_court.department }
      - "trial_court_division": ${ trial_court.division }
      - "plaintiffs": ${ plaintiffs }
      - "defendants": ${ defendants }
      - "docket_number": ${ docket_number }
      - "users1_name_full": ${ users[0] }
      - "users1_name_full__1": ${ users[0] }
      - "signature_date": ${ signature_date }
      - "user1_signature": ${ users[0].signature_if_final(i) }
      - "is_current_military": ${ is_current_military }
      - "current_military_parties": ${ current_military_parties }
      - "is_not_current_military": ${ is_not_current_military }
      - "not_current_military_parties": ${military_affidavit_attachment.safe_value("not_current_military_parties")}
      - "unknown_current_military": ${ unknown_current_military }
      - "unknown_current_military_parties": ${ unknown_current_military_parties }
      - "facts": ${ facts }
      - "bbo_number": ${ bbo_number }
      - "user_is_attorney": ${ user_is_attorney }
---
code: |
  military_affidavit_attachment.overflow_fields["not_current_military_parties"].overflow_trigger = 364
  military_affidavit_attachment.overflow_fields["not_current_military_parties"].label = "List of parties not currently in the military"
  military_affidavit_attachment.overflow_fields.gathered = True
